apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.yumesoftworks.fileshare"
        minSdkVersion 16
        targetSdkVersion 28
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs{
        myConfig{
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.myConfig
        }
    }

    flavorDimensions "tier"
    productFlavors {
        free {
            dimension "tier"
            applicationId 'com.yumesoftworks.fileshare.free'
        }

        paid {
            dimension "tier"
            applicationId 'com.yumesoftworks.fileshare.paid'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'

    implementation 'androidx.vectordrawable:vectordrawable-animated:1.1.0-rc01'
    implementation 'androidx.exifinterface:exifinterface:1.1.0-beta01'
    implementation 'androidx.browser:browser:1.0.0'
    implementation 'androidx.media:media:1.1.0-rc01'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta03'
    implementation 'com.google.android.material:material:1.1.0'

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:core:1.2.0'

    def fragment_version = '1.2.0'
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'

    testImplementation 'junit:junit:4.12'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    //room
    def room_version = '2.2.0-alpha02'
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    //View model and lifecycle
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0-beta01'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.0.0-beta01'

    //firebase analytics and admob
    freeImplementation 'com.google.firebase:firebase-ads:18.1.1'
    implementation 'com.google.firebase:firebase-core:17.1.0'

    //crashlytics
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
}

apply plugin: 'com.google.gms.google-services'